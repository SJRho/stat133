library(tidyverse)
# your code
# your code
# your code
# your code
# your code
# your code
install.package("readr")
install("readr")
?install
??install
install.packages("readr")
install.packages("readr")
View(df)
library(tidyverse)
flags <- read.table("flag.data", sep = ",")
setwd("C:/Users/samue/Dropbox/Spring 2023/STAT133/Labs/lab04")
flags <- read.table("flag.data", sep = ",")
head(flags)
?setwd
getwd()
str(flags, vec.len = 1)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
column_names <- c('name', 'landmass', 'zone', 'area', 'population', 'language', 'religion', 'bars', 'stripes', 'colours', 'red', 'green', 'blue', 'gold', 'white', 'black', 'orange', 'mainhue', 'circles', 'crosses', 'saltires', 'quarters', 'sunstars', 'crescent', 'triangle', 'icon', 'animate', 'text', 'topleft', 'botright')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
column_names <- c('name', 'landmass', 'zone', 'area', 'population', 'language', 'religion', 'bars', 'stripes', 'colours', 'red', 'green', 'blue', 'gold', 'white', 'black', 'orange', 'mainhue', 'circles', 'crosses', 'saltires', 'quarters', 'sunstars', 'crescent', 'triangle', 'icon', 'animate', 'text', 'topleft', 'botright')
# import with read.table()
flags <- read.table(
file = flags.data,
sep = ',',
col.names = column_names)
# import with read.table()
flags <- read.table(
file = 'flags.data',
sep = ',',
col.names = column_names)
?file
getwd()
# import with read.table()
flags <- read.table(
file = "https://archive.ics.uci.edu/ml/machine-learning-databases/flags/flag.data",
sep = ',',
col.names = column_names)
names(flags)
colnames(flags)
names(flags)
?read.table()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
column_names <- c('name', 'landmass', 'zone', 'area', 'population', 'language', 'religion', 'bars', 'stripes', 'colours', 'red', 'green', 'blue', 'gold', 'white', 'black', 'orange', 'mainhue', 'circles', 'crosses', 'saltires', 'quarters', 'sunstars', 'crescent', 'triangle', 'icon', 'animate', 'text', 'topleft', 'botright')
# import with read.table()
flags <- read.table(
file = "flag.data",
sep = ',',
col.names = column_names)
names(flags)
flag_1_5 <- read.table(
file = "flag.data",
sep = ',',
col.names = column_names,
nrows = 5)
View(flag_1_5)
flag_6_10 <- read.table(
file = "flag.data",
sep = ',',
col.names = column_names,
nrows = 5,
skip = 5)
flag_6_10
?rep()
?rep
names(flags)
str(flags)
rep(3)
rep(3,c(1))
rep(c(1,2,3,4),times=2)
flag4 <- read.table(
file = "flag.data",
sep = ',')
str(flag4)
rep("int",3)
c("chr",rep("int",3))
flag4 <- read.table(
file = "flag.data",
sep = ',',
colClasses = c("chr",rep("int",3))
)
flag4 <- read.table(
file = "flag.data",
sep = ',',
colClasses = c("character",rep("int",3))
)
flag4 <- read.table(
file = "flag.data",
sep = ',',
colClasses = c("chr", rep("int",3), rep("NULL", 26))
)
flag4 <- read.table(
file = "flag.data",
sep = ',',
colClasses = c("character", rep("int",3), rep("NULL", 26))
)
flag4 <- read.table(
file = "flag.data",
sep = ',',
colClasses = c("character", rep("int",3), rep(NULL, 26))
)
flag4 <- read.table(
file = "flag.data",
sep = ',',
colClasses = c("chr", rep("int",3), rep(NULL, 26))
)
flag4 <- read.table(
file = "flag.data",
sep = ',',
colClasses = c(“character”, rep("int",3), rep(NULL, 26))
flag4 <- read.table(
file = "flag.data",
sep = ',',
colClasses = c("character", rep("int",3), rep(NULL, 26))
)
flag4 <- read.table(
file = "flag.data",
sep = ',',
colClasses = c("character", rep("integer", 3), rep(NULL, 26))
)
c("character", rep("integer", 3), rep(NULL, 26)
)
flag4 <- read.table(
file = "flag.data",
sep = ',',
colClasses = c("character", rep("integer", 3), rep("NULL", 26))
)
str(flag4)
flag135 <- read.table(
file = "flag.data",
sep = ',',
colClasses = c("character", rep(c("NULL", "integer"), 2), rep("NULL", 25))
)
str(flag135)
flags4 = read.table(
file = "flag.data",
sep = ",",
col.names = c("name", "landmass", "area", "population", rep("", 26)),
colClasses = c(
"character", # name
"integer",   # landmass
"integer",   # area
"integer",   # population
rep("NULL", 26))  # exclude rest of columns
)
flags4
flag4 <- read.table(
file = "flag.data",
sep = ',',
col.names = column_names,
colClasses = c("character", rep("integer", 3), rep("NULL", 26))
)
str(flag4)
flag135 <- read.table(
file = "flag.data",
sep = ',',
col.names = column_names,
colClasses = c("character", rep(c("NULL", "integer"), 2), rep("NULL", 25))
)
str(flag135)
flags4 = read.table(
file = "flag.data",
sep = ",",
col.names = c("name", "landmass", "area", "population", rep("", 26)),
colClasses = c(
"character", # name
"integer",   # landmass
"integer",   # area
"integer",   # population
rep("NULL", 26))  # exclude rest of columns
)
# auxiliary numeric vector with
landmass_keys = c(
"N.America" = 1,
"S.America" = 2,
"Europe" = 3,
"Africa" = 4,
"Asia" = 5,
"Oceania" = 6)
landmass_keys
# small test
landmass_keys[c(2, 1, 5, 6, 4, 3)]
# we are interested in the names
names(landmass_keys[c(2, 1, 5, 6, 4, 3)])
head(flags4$landmass)
View(flags4)
landmass_categories = names(landmass_keys[flags4$landmass])
head(landmass_categories)
flags4$landmass
head(flags4)
# replace data in column landmass
# (now landmass have character values, not numeric)
flags4$landmass = landmass_categories
head(flags4)
View(flags)
View(flags)
flags6 <- read.table(
file = "flag.data",
sep = ',',
col.names = column_names,
colClasses = c("character", rep("integer", 5), rep("NULL", 24))
)
language_keys = c(
"English" = 1,
"Spanish" = 2,
"French" = 3,
"German" = 4,
"Slavic" = 5,
"Other Indo-European" = 6,
"Chinese" = 7,
"Arabic" = 8,
"Japanese/Turkish/Finnish/Magyar" = 9,
"Others" = 10)
language_categories = names(language_keys[flags6$language])
flags6$language = language_categories
flags6
flags6 <- read.table(
file = "flag.data",
sep = ',',
col.names = column_names,
colClasses = c("character", rep("integer", 5), rep("NULL", 24))
)
language_keys = c(
"English" = 1,
"Spanish" = 2,
"French" = 3,
"German" = 4,
"Slavic" = 5,
"Other Indo-European" = 6,
"Chinese" = 7,
"Arabic" = 8,
"Japanese/Turkish/Finnish/Magyar" = 9,
"Others" = 10)
language_categories = names(language_keys[flags6$language])
flags6$language = language_categories
head(flags6)
?table
?count
count(flags6, language)
flags6 <- read.table(
file = "flag.data",
sep = ',',
col.names = column_names,
colClasses = c("character", rep("integer", 5), rep("NULL", 24))
)
language_keys = c(
"English" = 1,
"Spanish" = 2,
"French" = 3,
"German" = 4,
"Slavic" = 5,
"Other Indo-European" = 6,
"Chinese" = 7,
"Arabic" = 8,
"Japanese/Turkish/Finnish/Magyar" = 9,
"Others" = 10)
language_categories = names(language_keys[flags6$language])
flags6$language = language_categories
table(count(flags6, language))
flags6 <- read.table(
file = "flag.data",
sep = ',',
col.names = column_names,
colClasses = c("character", rep("integer", 5), rep("NULL", 24))
)
language_keys = c(
"English" = 1,
"Spanish" = 2,
"French" = 3,
"German" = 4,
"Slavic" = 5,
"Other Indo-European" = 6,
"Chinese" = 7,
"Arabic" = 8,
"Japanese/Turkish/Finnish/Magyar" = 9,
"Others" = 10)
language_categories = names(language_keys[flags6$language])
flags6$language = language_categories
table(flags6, language)
flags6 <- read.table(
file = "flag.data",
sep = ',',
col.names = column_names,
colClasses = c("character", rep("integer", 5), rep("NULL", 24))
)
language_keys = c(
"English" = 1,
"Spanish" = 2,
"French" = 3,
"German" = 4,
"Slavic" = 5,
"Other Indo-European" = 6,
"Chinese" = 7,
"Arabic" = 8,
"Japanese/Turkish/Finnish/Magyar" = 9,
"Others" = 10)
language_categories = names(language_keys[flags6$language])
flags6$language = language_categories
flags6 %>% count(language)
flags6 <- read.table(
file = "flag.data",
sep = ',',
col.names = column_names,
colClasses = c("character", rep("integer", 5), rep("NULL", 24))
)
language_keys = c(
"English" = 1,
"Spanish" = 2,
"French" = 3,
"German" = 4,
"Slavic" = 5,
"Other Indo-European" = 6,
"Chinese" = 7,
"Arabic" = 8,
"Japanese/Turkish/Finnish/Magyar" = 9,
"Others" = 10)
language_categories = names(language_keys[flags6$language])
flags6$language = language_categories
flags6 %>% tally(language)
flags6 <- read.table(
file = "flag.data",
sep = ',',
col.names = column_names,
colClasses = c("character", rep("integer", 5), rep("NULL", 24))
)
language_keys = c(
"English" = 1,
"Spanish" = 2,
"French" = 3,
"German" = 4,
"Slavic" = 5,
"Other Indo-European" = 6,
"Chinese" = 7,
"Arabic" = 8,
"Japanese/Turkish/Finnish/Magyar" = 9,
"Others" = 10)
language_categories = names(language_keys[flags6$language])
flags6$language = language_categories
flags6 %>% count(language)
flags6 <- read.table(
file = "flag.data",
sep = ',',
col.names = column_names,
colClasses = c("character", rep("integer", 5), rep("NULL", 24))
)
language_keys = c(
"English" = 1,
"Spanish" = 2,
"French" = 3,
"German" = 4,
"Slavic" = 5,
"Other Indo-European" = 6,
"Chinese" = 7,
"Arabic" = 8,
"Japanese/Turkish/Finnish/Magyar" = 9,
"Others" = 10)
language_categories = names(language_keys[flags6$language])
flags6$language = language_categories
table(flags6$language)
flags6 <- read.table(
file = "flag.data",
sep = ',',
col.names = column_names,
colClasses = c("character", rep("integer", 5), rep("NULL", 24))
)
language_keys = c(
"English" = 1,
"Spanish" = 2,
"French" = 3,
"German" = 4,
"Slavic" = 5,
"Other Indo-European" = 6,
"Chinese" = 7,
"Arabic" = 8,
"Japanese/Turkish/Finnish/Magyar" = 9,
"Others" = 10)
language_categories = names(language_keys[flags6$language])
flags6$language = language_categories
count(flags6, language)
View(flags4)
# manipulation step-by-step
dat1 <- group_by(flags4, landmass)
dat2 <- select(dat1, landmass, area, population)
dat3 <- summarise(dat2,
avg_area = mean(area, na.rm = TRUE),
avg_pop = mean(population, na.rm = TRUE))
dat4 <- arrange(dat3, avg_area)
dat4
# inside-out style (hard to read)
arrange(
summarise(
select(
group_by(flags4, landmass),
landmass, area, population
),
avg_area = mean(area, na.rm = TRUE),
avg_pop = mean(population, na.rm = TRUE)
),
avg_area
)
# using %>%
flags4 %>%
group_by(landmass) %>%
select(landmass, area, population) %>%
summarise(
avg_area = mean(area, na.rm = TRUE),
avg_pop = mean(population, na.rm = TRUE)) %>%
arrange(avg_area)
?slice
flags %>%
slice_head(n=3) %>%
select(landmass, area, population)
flags %>%
slice_head(n=5) %>%
select(name, landmass, area, population) %>%
arrange(population)
flags_circles <- filter(flags, circles > 0) %>%
select(name, religion, circles)
str(flags_circles)
flags_crosses <- filter(flags, crosses > 0) %>%
select(name, colours, religion)
head(flags_crosses)
filter(flags, sunstars > 0) %>%
arrange(desc(count(mainhue)))
filter(flags, sunstars > 0) %>%
count(mainhue)
filter(flags, sunstars > 0) %>%
arrange(count(mainhue), desc)
?arrange
?desc
filter(flags, sunstars > 0) %>%
arrange(desc(count(mainhue)))
filter(flags, sunstars > 0) %>%
desc(arrange(count(mainhue)))
filter(flags, sunstars > 0) %>%
arrange(count(mainhue))
filter(flags, sunstars > 0) %>%
count(mainhue)
filter(flags, sunstars > 0) %>%
count(mainhue)
arrange(n)
filter(flags, sunstars > 0) %>%
count(mainhue)
filter(flags, sunstars > 0) %>%
count(mainhue)
arrange(mainhue)
filter(flags, sunstars > 0) %>%
count(mainhue)
filter(flags, sunstars > 0) %>%
group_by(mainhue) %>%
values = count(mainhue)
filter(flags, sunstars > 0) %>%
group_by(mainhue)
flags %>%
sunstars > 0 %>%
arrange(mainhue)
filter(flags, sunstars > 0) %>%
arrange(mainhue)
filter(flags, sunstars > 0) %>%
count(mainhue)
?group_by
filter(flags, sunstars > 0) %>%
group_by(count(mainhue))
filter(flags, sunstars > 0) %>%
group_by(mainhue)
filter(flags, sunstars > 0) %>%
count(mainhue)
?arrange
filter(flags, sunstars > 0) %>%
counts = count(mainhue)
filter(flags, sunstars > 0) %>%
count(mainhue) %>%
arrange()
filter(flags, sunstars > 0) %>%
count(mainhue) %>%
arrange(n)
filter(flags, sunstars > 0) %>%
count(mainhue) %>%
arrange(desc(n))
filter(flags, language == 2 | language == 3) %>%
group_by(landmass) %>%
summarise(
median_area = median(area, na.rm = TRUE),
median_pop = median(population, na.rm = TRUE))
filter(flags$landmass = landmass_categories, language == 2 | language == 3) %>%
filter(flags, language == 2 | language == 3) %>%
group_by(landmass) %>%
summarise(
median_area = median(area, na.rm = TRUE),
median_pop = median(population, na.rm = TRUE))
filter(flags, language == 2 | language == 3) %>%
group_by(landmass) %>%
$landmass = landmass_categories
filter(flags, language == 2 | language == 3)$landmass = landmass_categories %>%
group_by(landmass) %>%
summarise(
median_area = median(area, na.rm = TRUE),
median_pop = median(population, na.rm = TRUE))
filter(flags, language == 2 | language == 3) %>%
group_by(landmass) %>%
summarise(
median_area = median(area, na.rm = TRUE),
median_pop = median(population, na.rm = TRUE))
names(flags)
